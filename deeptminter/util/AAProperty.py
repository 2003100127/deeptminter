__author__ = "Jianfeng Sun"
__version__ = "v1.0"
__copyright__ = "Copyright 2025"
__license__ = "GPL v3.0"
__email__ = "jianfeng.sunmt@gmail.com"
__maintainer__ = "Jianfeng Sun"


class AAProperty:

    def colls34aaanalysis(self, ):
        return {
            'A': [0.67606, 0.81818, 0.11765, 0.13333, 0.24779, 0.875,
                  0.82642, 0.5, 0.63158, 0.35616, 0.5, 0.69863, 0.71311,
                  0.24793, 0.11765, 0.2069, 0.1236, 0.04386, 0.29533,
                  0.17492, 0.61655, 0.56663, 0.47887, 0.11247, 0.48042,
                  0.26774, 0.06433, 0.54717, 0.96667, 0.13125, 0.36468,
                  0.4583, 0.62921, 0.39216],
            'C': [1.0, 0.07792, 0.58824, 0.67619, 0.56637, 0.3125, 0.69057,
                  0.3, 0.52632, 0.0, 0.38889, 0.37671, 0.65574, 0.0, 0.14706,
                  0.06897, 0.58427, 0.65789, 0.65637, 0.08911, 0.73379, 0.543,
                  0.0, 0.31296, 0.34465, 0.25806, 0.78265, 0.31761, 0.39167,
                  0.10625, 1.0, 0.61091, 0.0, 0.05882],
            'D': [0.22535, 0.49351, 0.60784, 0.3619, 0.15929, 0.54167,
                  0.53585, 0.0, 0.26316, 0.65753, 0.72222, 0.35616, 0.48361,
                  1.0, 0.58824, 0.62069, 0.93258, 0.24561, 1.0, 0.33663,
                  0.22483, 0.9856, 0.80282, 0.25672, 0.34465, 0.20645,
                  0.24561, 0.27358, 0.69167, 0.80625, 0.08829, 0.73327,
                  0.75281, 0.4902],
            'E': [0.1831, 0.62338, 0.2451, 0.28571, 0.0, 1.0, 0.78113,
                  0.0, 0.78947, 0.54795, 0.38889, 0.40411, 1.0, 0.47107,
                  0.08824, 1.0, 0.35955, 0.09649, 0.04592, 0.18152, 0.53103,
                  0.80768, 0.85915, 0.36919, 0.13838, 0.20968, 0.4191, 0.0,
                  0.84167, 0.74375, 0.12668, 0.76398, 0.74157, 0.56863],
            'F': [0.77465, 0.33766, 0.11765, 0.42857, 0.59292, 0.55208,
                  0.88302, 0.3, 0.05263, 0.52055, 0.0, 0.60959, 0.45082,
                  0.4876, 0.02941, 0.06897, 0.29213, 0.10526, 0.74901,
                  0.06601, 0.02345, 0.41344, 0.0, 0.70905, 0.89034, 0.8871,
                  0.54288, 0.94654, 0.54167, 0.0, 0.62764, 0.80202, 0.47191,
                  0.03922],
            'G': [0.69014, 0.77922, 0.91176, 0.62857, 0.30973, 0.11458,
                  0.5283, 0.1, 0.0, 0.56164, 0.61111, 0.30137, 0.0,
                  0.50413, 0.5, 0.06897, 0.99438, 0.86842, 0.03959,
                  0.39274, 0.45517, 0.63787, 0.66197, 0.0, 0.34465,
                  0.03226, 0.18908, 0.53145, 0.96667, 0.16875,
                  0.30518, 0.0, 0.96629, 0.39216],
            'H': [0.43662, 0.11688, 0.47059, 0.6381, 0.34513, 0.61458,
                  0.80377, 0.5, 0.84211, 1.0, 0.61111, 0.76712, 0.52459,
                  0.38017, 0.29412, 0.10345, 0.44944, 0.00877, 0.19161,
                  0.12541, 0.34483, 0.81432, 0.47887, 0.56235, 0.59269,
                  0.3871, 0.0, 0.42138, 0.53333, 0.41875, 0.40883, 0.91659,
                  0.61798, 0.29412],
            'I': [0.88732, 0.50649, 0.06863, 0.51429, 0.84071, 0.58333,
                  0.57736, 0.1, 0.10526, 0.64384, 0.55556, 0.55479,
                  0.30328, 0.33884, 0.02941, 0.0, 0.0, 0.02632, 0.0,
                  0.0495, 0.07034, 0.25729, 0.05634, 0.45477, 0.87728,
                  0.99032, 1.0, 0.96855, 0.98333, 0.0375, 0.81958, 0.73327,
                  0.40449, 0.07843],
            'K': [0.0, 0.58442, 0.39216, 0.2381, 0.21239, 0.72917, 0.78868,
                  1.0, 0.89474, 0.82192, 0.61111, 0.85616, 0.5, 0.38843,
                  0.17647, 0.13793, 0.33146, 0.36842, 0.29375, 0.15512,
                  0.68828, 0.29051, 1.0, 0.53545, 0.36554, 0.51613,
                  0.44444, 0.53459, 0.83333, 0.78125, 0.0, 0.76398, 1.0, 1.0],
            'L': [0.80282, 1.0, 0.09804, 0.4381, 0.62832, 0.71875, 0.91698,
                  0.3, 0.31579, 0.67123, 0.44444, 1.0, 0.7541, 0.34711,
                  0.02941, 0.06897, 0.12921, 0.14912, 0.0, 0.15182,
                  0.77103, 0.39424, 0.01408, 0.45477, 0.80418, 0.83548,
                  0.39864, 0.80818, 0.98333, 0.05625, 0.70058, 0.73327,
                  0.47753, 0.15686],
            'M': [0.69014, 0.12987, 0.0, 0.35238, 0.46018, 0.96875, 1.0,
                  0.3, 0.57895, 0.60274, 0.38889, 0.71918, 0.35246, 0.50413,
                  0.20588, 0.2069, 0.00562, 0.01754, 0.65162, 0.08251,
                  0.51172, 0.47545, 0.11268, 0.54034, 0.6893, 0.45161,
                  0.35283, 0.68239, 0.91667, 0.01875, 0.78887, 0.73327,
                  0.26966, 0.0],
            'N': [0.26761, 0.37662, 0.76471, 0.6, 0.07965, 0.38542,
                  0.63019, 0.5, 0.36842, 0.20548, 0.44444, 0.55479,
                  0.29508, 0.75207, 1.0, 0.10345, 1.0, 0.33333, 0.0285,
                  0.24422, 0.3131, 0.74234, 0.71831, 0.32763, 0.34204,
                  0.02903, 0.56628, 0.5566, 0.7, 0.53125, 0.08637, 0.73327,
                  0.77528, 0.45098],
            'P': [0.30986, 0.48052, 1.0, 0.09524, 0.0708, 0.0, 0.0,
                  0.3, 0.0, 0.46575, 1.0, 0.0, 0.0082, 0.61983, 0.20588,
                  0.0, 0.11798, 0.13158, 0.15677, 1.0, 0.93655, 0.85013,
                  0.80282, 0.32029, 0.34465, 0.87097, 0.27778, 0.72327,
                  0.675, 0.24375, 0.17658, 0.91659, 0.89888, 0.7451],
            'Q': [0.1831, 0.35065, 0.27451, 0.0, 0.39823, 0.64583, 0.77358,
                  0.3, 0.73684, 0.47945, 0.72222, 0.39041, 0.54098,
                  0.56198, 0.08824, 0.37931, 0.13483, 0.39474, 0.60253,
                  0.15182, 0.44552, 0.72462, 0.73239, 0.4401, 0.32637,
                  0.0, 0.30799, 0.3805, 0.825, 0.4875, 0.18234, 0.76398,
                  0.79775, 0.60784],
            'R': [0.02817, 0.48052, 0.46078, 0.42857, 0.28319, 0.5,
                  0.73962, 1.0, 1.0, 0.39726, 0.72222, 0.71918, 0.36066,
                  0.32231, 0.08824, 0.0, 0.48315, 0.2807, 0.7593, 0.11881,
                  0.55034, 0.75268, 0.6338, 0.71149, 0.0, 0.26774, 0.44834,
                  0.5566, 0.0, 1.0, 0.20921, 0.68744, 0.8427, 0.5098],
            'S': [0.4507, 0.71429, 0.73529, 0.80952, 0.34513, 0.22917,
                  0.61509, 0.8, 0.73684, 0.05479, 0.33333, 0.5411, 0.47541,
                  0.72727, 0.64706, 0.0, 0.62921, 0.46491, 0.65637, 0.10891,
                  0.86759, 0.59948, 0.70423, 0.15159, 0.35509, 0.04516,
                  0.48051, 0.56918, 0.85833, 0.19375, 0.23225, 0.61091,
                  0.70225, 0.37255],
            'T': [0.38028, 0.58442, 0.48039, 1.0, 0.57522, 0.30208,
                  0.57736, 0.3, 0.36842, 0.23288, 0.38889, 0.46575,
                  0.22131, 0.8595, 0.44118, 0.2069, 0.29213, 0.22807,
                  0.74505, 0.0396, 1.0, 0.4832, 0.57746, 0.26406, 0.41514,
                  0.17419, 0.31092, 0.61635, 0.76667, 0.15625, 0.26104,
                  0.68744, 0.65169, 0.35294],
            'V': [0.85915, 0.67532, 0.03922, 0.60952, 1.0, 0.4375,
                  0.79245, 0.1, 0.26316, 0.09589, 0.27778, 0.61644,
                  0.58197, 0.24793, 0.0, 0.24138, 0.08427, 0.0, 0.04513,
                  0.0, 0.40828, 0.512, 0.12676, 0.3423, 0.65274, 0.57742,
                  0.49318, 0.61635, 0.95, 0.06875, 0.89443, 0.68744,
                  0.49438, 0.27451],
            'W': [0.64789, 0.0, 0.16667, 0.34286, 0.57522, 0.46875,
                  0.75849, 0.3, 0.10526, 0.53425, 0.16667, 0.79452,
                  0.13934, 0.47107, 0.05882, 0.34483, 0.28652, 1.0,
                  0.43389, 0.07591, 0.13793, 0.0, 0.07042, 1.0, 1.0,
                  1.0, 0.6423, 1.0, 1.0, 0.1125, 0.51631, 1.0, 0.5618,
                  0.13725],
            'Y': [0.29577, 0.23377, 0.47059, 0.44762, 0.61947, 0.28125,
                  0.63019, 0.3, 0.05263, 0.65753, 0.44444, 0.65068,
                  0.21311, 0.3719, 0.20588, 0.27586, 0.56742, 0.63158,
                  0.40855, 0.0363, 0.0, 1.0, 0.12676, 0.72861, 0.77023,
                  0.99032, 0.04094, 0.72327, 0.85, 0.275, 0.53935,
                  0.91659, 0.60112, 0.33333]
        }

    def get_(self, list_2d, window_aa_names):
        list_2d_ = list_2d
        aas = self.colls34aaanalysis()
        for i, aa_win_ids in enumerate(window_aa_names):
            for j in aa_win_ids:
                if j is None:
                    list_2d_[i] = list_2d_[i] + [0 for _ in range(34)]
                else:
                    list_2d_[i] = list_2d_[i] + aas[j]
        return list_2d_